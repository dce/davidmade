require 'mustache'
require 'yaml'
require 'rdiscount'

class Post < Mustache
  include Comparable

  def initialize(file_path)
    @file_path = file_path
    @meta, @body = File.open(@file_path).read.split(/\n\n/, 2)
    @meta = YAML.load(@meta)
    self.template = File.open("templates/_#{type}.html.mustache").read

    File.open("public/#{url}", "w") do |index|
      layout = Layout.new([title, "DavidMade"].compact * " - ") { render }
      index.write(layout.render)
    end
  end

  def self.all
    Dir.glob("posts/*").map {|f| new(f) }.sort.reverse
  end

  def date
    @meta["date"]
  end

  def formatted_date
    date.strftime("%b %e, %Y")
  end

  def title
    @meta["title"]
  end

  def file
    @meta["file"]
  end

  def body
    RDiscount.new(@body).to_html if @body
  end

  def type
    @meta["type"] || "post"
  end

  def url
    @file_path.gsub(/md$/, "html")
  end

  def <=>(other)
    self.date <=> other.date
  end
end

class Layout < Mustache
  self.template_file = "templates/layout.html.mustache"

  def initialize(title = nil)
    self[:yield] = yield
    self[:title] = title || "Davidmade"
  end
end

class Index < Mustache
  self.template_file = "templates/index.html.mustache"

  def initialize(posts)
    self[:posts] = posts
  end
end

task :build do |t|
  FileUtils.rm_rf("public/posts")
  FileUtils.mkdir("public/posts")

  layout = Layout.new do
    Index.new(Post.all).render
  end

  File.open("public/index.html", "w") do |index|
    index.write(layout.render)
  end

  puts layout.render
end

task :new_post, [:file_name] do |t, args|
  File.open("posts/#{args.file_name}.md", "w") do |file|
    file.write "title:\n"
    file.write "date: #{Date.today}"
  end

  exec "mate posts/#{args.file_name}.md"
end
