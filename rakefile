require 'mustache'
require 'yaml'
require 'rdiscount'
require 'sass'

Dir.glob('./lib/*.rb').each { |f| require f }

PER_PAGE = 10

def generate_indexes(posts, type = nil)
  directory = "public"

  if type
    posts = posts.select {|p| p.type == type }
    directory << "/#{type}"
    FileUtils.mkdir(directory) rescue nil
  end 

  last_page = (posts.size - 1) / PER_PAGE

  0.upto(last_page) do |page|
    layout = Layout.new(:post_type => type) do
      index = Index.new(posts[page * PER_PAGE, PER_PAGE])
      index[:post_type] = type
      index[:curr_page] = page + 1
      index[:last_page] = last_page
      index[:prev_page] = page == 0 ? nil : page == 1 ? "index" : page
      index[:next_page] = page + 2 unless page == last_page
      index.render
    end

    file_name = page == 0 ? "index" : page + 1

    File.open("#{directory}/#{file_name}.html", "w") do |index|
      index.write layout.render
    end
  end

  File.open("#{directory}/index.atom", "w") do |feed|
    feed.write Index.new(posts[0, PER_PAGE], :format => :atom).render
  end
end

def log(msg)
  puts "=> #{msg}"
end

desc "Generate static site files"
task :build do |t|
  puts "Rebuilding..."

  log "Deleting public folder"
  FileUtils.rm_rf "public"

  log "Copying assets"
  FileUtils.cp_r "assets", "public"

  Rake::Task[:sass].invoke

  posts = Post.all
  FileUtils.mkdir_p "public/posts"

  log "Writing individual post files"
  posts.each { |p| p.write }

  log "Generating main index pages"
  generate_indexes(posts)

  log "Generating type-specific index pages"
  Post.types.each do |type|
    generate_indexes(posts, type)
  end

  puts "Done."
end

desc "Process SASS files"
task :sass do
  log "Processing SASS files"
  Dir.glob("assets/stylesheets/*.sass").each do |sass_file|
    Sass.compile_file(sass_file, sass_file.gsub("sass", "css").gsub("assets", "public"))
    FileUtils.rm sass_file.gsub("assets", "public"), :force => true
  end
end

desc "Create a new post"
task :new_post, [:file_name] do |t, args|
  title = args.file_name.split("-").map {|w| w.capitalize } * " "

  File.open("posts/#{args.file_name}.md", "w") do |file|
    file.write "title: \"#{title}\"  \n"
    file.write "date: #{Date.today}\n\n\n"
  end

  exec "git checkout -b #{args.file_name} && mvim posts/#{args.file_name}.md +4"
end

desc "Start a local server at http://localhost:8000"
task :server do |t|
 sh "cd ./public && python -m SimpleHTTPServer"
end
