require 'mustache'
require 'yaml'
require 'rdiscount'

Dir.glob('lib/*.rb').each {|f| require f }

PER_PAGE = 10

def generate_indexes(posts, type = nil)
  directory = "public"

  if type
    posts = posts.select {|p| p.type == type }
    directory << "/#{type}"
    FileUtils.mkdir(directory) rescue nil
  end 

  last_page = (posts.size - 1) / PER_PAGE

  0.upto(last_page) do |page|
    layout = Layout.new(:post_type => type) do
      index = Index.new(posts[page * PER_PAGE, PER_PAGE])
      index[:post_type] = type
      index[:next_page] = page + 2 unless page == last_page
      index.render
    end

    file_name = page == 0 ? "index" : page + 1

    File.open("#{directory}/#{file_name}.html", "w") do |index|
      index.write layout.render
    end
  end

  File.open("#{directory}/index.atom", "w") do |feed|
    feed.write Index.new(posts[0, PER_PAGE], :format => :atom).render
  end
end

task :build do |t|
  print "Rebuilding... "

  FileUtils.rm_rf("public/posts")
  FileUtils.mkdir("public/posts")

  posts = Post.all

  posts.each {|p| p.write }

  generate_indexes(posts)
  Post.types.each do |type|
    generate_indexes(posts, type)
  end

  puts "done."
end

task :new_post, [:file_name] do |t, args|
  title = args.file_name.split("-").map {|w| w.capitalize } * " "

  File.open("posts/#{args.file_name}.md", "w") do |file|
    file.write "title: \"#{title}\"  \n"
    file.write "date: #{Date.today}\n\n\n"
  end

  exec "mvim posts/#{args.file_name}.md +4"
end

task :server do |t|
 sh "cd ./public && python -m SimpleHTTPServer"
end
